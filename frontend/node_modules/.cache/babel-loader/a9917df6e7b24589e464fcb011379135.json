{"ast":null,"code":"import axios from 'axios';\naxios.interceptors.request.use(function (req) {\n  console.log(\"req\");\n  return req;\n}, err => {\n  console.log(\"req\");\n  return Promise.reject(err);\n});\naxios.interceptors.response.use(function (res) {\n  console.log(\"ok\");\n  return res;\n}, err => {\n  console.log(err);\n  return Promise.reject(err);\n});\nconst apiUrl = \"http://localhost:5235\";\nexport default {\n  getTasks: async () => {\n    console.log('g');\n    const result = await axios.get(`${apiUrl}/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`${apiUrl}/items`, {\n      id: 0,\n      name: name\n    });\n    return result.data;\n  },\n  setCompleted: async (id, name, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      name,\n      isComplete\n    });\n    const result = await axios.put(`${apiUrl}/items/${id}`, {\n      name: name,\n      isComplete: true\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    await axios.delete(`${apiUrl}/items/${id}`);\n    console.log('deleteTask');\n  }\n};","map":{"version":3,"names":["axios","interceptors","request","use","req","console","log","err","Promise","reject","response","res","apiUrl","getTasks","result","get","data","addTask","name","post","id","setCompleted","isComplete","put","deleteTask","delete"],"sources":["I:/A_Tzivi_Programing/prakticode/teacher/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.interceptors.request.use(\n  function (req) {\n    console.log(\"req\");\n    return req;\n  },\n  (err) => {\n    console.log(\"req\")\n    return Promise.reject(err);\n  }\n);\n\naxios.interceptors.response.use(\n  function (res) {\n    console.log(\"ok\")\n    return res;\n  },\n  (err) => {\n    console.log(err)\n    return Promise.reject(err);\n  }\n);\n\nconst apiUrl = \"http://localhost:5235\"\n\nexport default {\n  getTasks: async () => {\n    console.log('g')\n    const result = await axios.get(`${apiUrl}/items`)\n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    console.log('addTask', name)\n    const result=await axios.post(`${apiUrl}/items`,{id:0,name:name})\n    return result.data;\n  },\n\n  setCompleted: async(id,name,isComplete)=>{\n    console.log('setCompleted', {id,name ,isComplete})\n    const result=await axios.put(`${apiUrl}/items/${id}`,{name:name,isComplete:true})\n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    await axios.delete(`${apiUrl}/items/${id}`)\n    console.log('deleteTask')\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5B,UAAUC,GAAG,EAAE;EACbC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,OAAOF,GAAG;AACZ,CAAC,EACAG,GAAG,IAAK;EACPF,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;EAClB,OAAOE,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC5B,CAAC,CACF;AAEDP,KAAK,CAACC,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7B,UAAUQ,GAAG,EAAE;EACbN,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjB,OAAOK,GAAG;AACZ,CAAC,EACAJ,GAAG,IAAK;EACPF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAChB,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC5B,CAAC,CACF;AAED,MAAMK,MAAM,GAAG,uBAAuB;AAEtC,eAAe;EACbC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpBR,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChB,MAAMQ,MAAM,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEH,MAAO,QAAO,CAAC;IACjD,OAAOE,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IACpBb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEY,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAC,MAAMd,KAAK,CAACmB,IAAI,CAAE,GAAEP,MAAO,QAAO,EAAC;MAACQ,EAAE,EAAC,CAAC;MAACF,IAAI,EAACA;IAAI,CAAC,CAAC;IACjE,OAAOJ,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDK,YAAY,EAAE,MAAAA,CAAMD,EAAE,EAACF,IAAI,EAACI,UAAU,KAAG;IACvCjB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACc,EAAE;MAACF,IAAI;MAAEI;IAAU,CAAC,CAAC;IAClD,MAAMR,MAAM,GAAC,MAAMd,KAAK,CAACuB,GAAG,CAAE,GAAEX,MAAO,UAASQ,EAAG,EAAC,EAAC;MAACF,IAAI,EAACA,IAAI;MAACI,UAAU,EAAC;IAAI,CAAC,CAAC;IACjF,OAAOR,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDQ,UAAU,EAAC,MAAMJ,EAAE,IAAG;IACpB,MAAMpB,KAAK,CAACyB,MAAM,CAAE,GAAEb,MAAO,UAASQ,EAAG,EAAC,CAAC;IAC3Cf,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module"}